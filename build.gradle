plugins {
    id 'java'
}

apply from: 'script.gradle'
//apply plugin: CustomPlugin.class
//apply plugin: 'java'

repositories { // порядок важен
//    //~/.gradle/caches -- offline
//    mavenLocal() // ~/.m2/repository
//    maven{
//        name "foretruff"
//        url "http://nexus.foretruff/repository"
//    }
    mavenCentral()
}

configurations {
    all {
        resolutionStrategy {
//            force("org.springframework:spring-aop:6.1.2")
        }
    }
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.2.3')
//    add("implementation", [group: "org.springframework", name: "spring-webmvc", version: "5.3.9"])
    implementation("org.springframework:spring-webmvc") {
//        exclude(group:"org.springframework" , module:"spring-aop")
//        transitive false
//        force(true) // что бы эта зависимость перетерла другую зависимость
    }

    implementation "org.springframework:spring-aop"
}

configurations.runtimeClasspath.files.each { println it }


jar {
    manifest {
        attributes "Main-Class": "org.example.Main"
    }

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    from(configurations.runtimeClasspath.files.collect {
        zipTree(it)
    })
}


//sourceSets {
//    main {
//        java {
////            srcDir("$buildDir/generadted-sources/querydsl")
//        }
////        resources {
////
////        }
//    }
//    test {
//
//    }
//}


//buildSrc  --id 'custom'
class CustomPlugin implements Plugin<Project> {

    @Override
    void apply(Project target) {
        addHelloTask(target)
    }

    static void addHelloTask(Project target) {
        def map = [description: "hello task", group: "foretruff", type: DefaultTask]
        target.task(map, "hello") {
            println "hello task"
            doLast {
                println "execution phase, Action 1 "
            }
            doFirst {
                println "execution phase, Action 2 "
            }
            doLast {
                println "execution phase, Action 3 "
            }
            println "task: $description , group: $group , actions: ${actions.size()}"
        }
    }

}

